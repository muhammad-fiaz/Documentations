[{"frontmatter":{"title":"Logly - Logging Utility for Python Applications","description":"Logly is a simple logging utility for Python that provides an easy way to log messages with different levels, colors, and options. It is designed to be flexible, allowing you to customize the log messages based on your application's needs. Logly supports logging to both the console and a file, and it comes with built-in color-coded log levels for better visibility.","date":"2023-04-10T00:00:00.000Z","image":"https://private-user-images.githubusercontent.com/75434191/307529707-500975cc-b5f4-46df-abe8-2d03c687a1c1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTA1MTMwMjQsIm5iZiI6MTcxMDUxMjcyNCwicGF0aCI6Ii83NTQzNDE5MS8zMDc1Mjk3MDctNTAwOTc1Y2MtYjVmNC00NmRmLWFiZTgtMmQwM2M2ODdhMWMxLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMTUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzE1VDE0MjUyNFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTAxMmUzMDRjMmE4OGY1MzQ1M2YwZjNkZTUxZmQ3MTMxNzM0NjE3ODRmNjI3ZTJjNWY4Mjk4Nzk1NGQwN2JmMjMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.H9MOqp4Xg3GJd1B2W4U7FpHz0KTjcJuuePBOUKtuVkQ","categories":["python","logging","utility","opensource","opensource-project","logly","python-utility","python-logging","python-opensource","python-opensource-project","python-opensource-utility","python-opensource-logging","python-opensource-logging-utility","python-opensource-logging-utility-project"],"authors":["muhammad-fiaz"],"tags":["python","logging","utility","opensource","opensource-project","logly","python-utility","python-logging","python-opensource","python-opensource-project","python-opensource-utility","python-opensource-logging","python-opensource-logging-utility","python-opensource-logging-utility-project"],"draft":false},"content":"\n\n\nLogly is a simple logging utility for Python that provides an easy way to log messages with different levels, colors, and options. It is designed to be flexible, allowing you to customize the log messages based on your application's needs. Logly supports logging to both the console and a file, and it comes with built-in color-coded log levels for better visibility.\n\nif you like this project make sure to star üåü it in the [repository](https://github.com/muhammad-fiaz/logly/) and if you want to contribute make sure to fork this repository‚ù§‚ú®.\n\n## Table of Contents\n\n1. [Introduction](#readme)\n2. [Installation](#installation)\n3. [Features](#features)\n4. [Usage](#usage)\n  - [Getting Started](#getting-started)\n  - [Explanation](#explanation)\n5. [Set Default Path](#set-default-path)\n6. [Color Options](#color-options)\n  - [Default Color Options](#default-color-options)\n  - [Custom Color Options](#custom-color-options)\n7. [Tips & Tricks](#tips--tricks)\n8. [Contributing](#contributing)\n9. [Code of Conduct](#code-of-conduct)\n10. [License](#license)\n11. [Support the Project](#support-the-project)\n12. [Happy Coding](#happy-coding)\n\n## Features\n\n- Easy-to-use logging for Python applications.\n- Customizable log levels and formatting.\n- Customizable log colors.\n- Log to file and/or console.\n- Log to file with automatic file rotation.\n- Log to file with automatic file size management.\n- Log to file with automatic file deletion.\n- Log to file with automatic deletion and rewriting of the file when it reaches max_file_size.\n\n## Getting Started\n\n## Installation\n\n```bash\npip install logly\n```\n\n## Usage\n\n```python\n# Import Logly\nfrom logly import Logly\n\n# Create a Logly instance\nlogly = Logly()\n# logly = Logly(show_time=False)  # Include timestamps in log messages default is  true, and you can set it to false will not show the time in all log messages\n\n# Start logging will store the log in text file\nlogly.start_logging() #make sure to include this or else the log will only display without storing it\n\nlogly.info(\"hello this is log\")\nlogly.info(\"hello this is log\", color=logly.COLOR.RED) # with custom color\n\n# Log messages with different levels and colors\nlogly.info(\"Key1\", \"Value1\", color=logly.COLOR.CYAN)\nlogly.warn(\"Key2\", \"Value2\", color=logly.COLOR.YELLOW)\nlogly.error(\"Key3\", \"Value3\", color=logly.COLOR.RED)\nlogly.debug(\"Key4\", \"Value4\", color=logly.COLOR.BLUE)\nlogly.critical(\"Key5\", \"Value5\", color=logly.COLOR.CRITICAL)\nlogly.fatal(\"Key6\", \"Value6\", color=logly.COLOR.CRITICAL)\nlogly.trace(\"Key7\", \"Value7\", color=logly.COLOR.BLUE)\nlogly.log(\"Key8\", \"Value8\", color=logly.COLOR.WHITE)\n\n# Stop logging ( messages will be displayed but not logged in file after this point)\nlogly.stop_logging()\n\n# Log more messages after stopping logging ( messages will be displayed but not logged in file after this point)\nlogly.info(\"AnotherKey1\", \"AnotherValue1\", color=logly.COLOR.CYAN)\nlogly.warn(\"AnotherKey2\", \"AnotherValue2\", color=logly.COLOR.YELLOW)\nlogly.error(\"AnotherKey3\", \"AnotherValue3\", color=logly.COLOR.RED)\n\n\nlogly.info(\"hello this is log\", color=logly.COLOR.RED,show_time=False) # with custom color and without time\n\n# Start logging again\nlogly.start_logging() \n\n# Set default file path and max file size\nlogly.set_default_file_path(\"log.txt\") # Set the default file path is \"log.txt\" if you want to set the file path where you want to save the log file.\nlogly.set_default_max_file_size(50) # set default max file size is 50 MB\n\n# Log messages with default settings (using default file path and max file size)\nlogly.info(\"DefaultKey1\", \"DefaultValue1\")\nlogly.warn(\"DefaultKey2\", \"DefaultValue2\")\nlogly.error(\"DefaultKey3\", \"DefaultValue3\", log_to_file=False)\n\n#DEFAULT FILE SIZE IS 100 MB in the txt file\n# Log messages with custom file path and max file size(optional)\nlogly.info(\"CustomKey1\", \"CustomValue1\", file_path=\"path/c.txt\", max_file_size=25) # max_file_size is in MB and create a new file when the file size reaches max_file_size\nlogly.warn(\"CustomKey2\", \"CustomValue2\", file_path=\"path/c.txt\", max_file_size=25,auto=True) # auto=True will automatically delete the file data when it reaches max_file_size\n\n# Access color constants directly\nlogly.info(\"Accessing color directly\", \"DirectColorValue\", color=logly.COLOR.RED)\n\n# Disable color\nlogly.color_enabled = False\nlogly.info(\"ColorDisabledKey\", \"ColorDisabledValue\", color=logly.COLOR.RED)\nlogly.info(\"ColorDisabledKey1\", \"ColorDisabledValue1\", color=logly.COLOR.RED,color_enabled=True) # This will enable the color for this one log message\nlogly.color_enabled = True\n# this will enable the color again\nlogly.info(\"ColorDisabledKey1\", \"ColorDisabledValue1\", color=logly.COLOR.RED,color_enabled=False) # this will disable the color for this one log message\n\n\n# Display logged messages (this will display all the messages logged so far)\nprint(\"Logged Messages:\")\nfor message in logly.logged_messages:\n    print(message)\n\n```\n## Explanation:\n\n1. Import the `Logly` class from the `logly` module.\n2. Create an instance of `Logly`.\n3. Start logging using the `start_logging()` method.\n4. Log messages with various levels (info, warn, error, debug, critical, fatal, trace) and colors.\n5. Stop logging using the `stop_logging()` method.\n6. Log additional messages after stopping logging.\n7. Start logging again.\n8. Log messages with default settings, custom file path, and max file size.\n9. Access color constants directly.\n10. Display logged messages.\n11. enable/disable timestamp support\n12. enable/disable color for log support\n\nfor more information check the [repository](https://github.com/muhammad-fiaz/logly)\n\n## Set Default Path\nIf you encounter an error related to the default file path, you can use the following code snippet to set the default path:\n\n```python3\nlogly = Logly()\nlogly.start_logging()\n\n# Set default file path and maximum file size\nlogly.set_default_max_file_size(50)\nlogger = os.path.join(os.path.dirname(os.path.abspath(__file__)), \"log.txt\")\nlogly.set_default_file_path(logger)\n```\nThis will set the default file path, and you can customize it according to your requirements.\n\n## Color Options:\n\n### Default Color Options:\n\n| Level    | Color Code      |\n| -------- | --------------- |\n| INFO     | CYAN            |\n| WARNING  | YELLOW          |\n| ERROR    | RED             |\n| DEBUG    | BLUE            |\n| CRITICAL | BRIGHT RED      |\n| TRACE    | BLUE            |\n| DEFAULT  | WHITE           |\n\n### Custom Color Options:\n\nYou can use any of the following color codes for custom coloring:\n\n| NAME     | Color Code      |\n|----------| --------------- |\n| CYAN      | CYAN            |\n| YELLOW   | YELLOW          |\n|  RED       | RED             |\n|  BLUE      | BLUE            |\n| BRIGHT RED | CRITICAL     |\n|WHITE   | WHITE           |\n\nFor example, you can use `color=logly.COLOR.BLACK` for the black color.\n\n## Tips & Tricks\nIf you want to use logly in your project files without creating a new object in each Python file or class, you can create a file named logly.py. In this file, initialize logly and configure the defaults. Now, you can easily import and use it throughout your project:\n\n`logly.py`\n```python3\n# logly.py in your root or custom path\n# Import Logly\nfrom logly import Logly\n\nlogly = Logly()\nlogly.start_logging()\n\n# Set default file path and maximum file size\nlogly.set_default_max_file_size(50)\nlogger = os.path.join(os.path.dirname(os.path.abspath(__file__)), \"log.txt\") # This will ensure the path location to create the log.txt \nlogly.set_default_file_path(logger)\n\n# Start logging again\nlogly.start_logging()\n```\nyou can now use the logly by\n\n\n`main.py`\n```python3\nfrom logly import logly # make sure to import it some IDE may automatically import it on top\n\nlogly.info(\"msg\",\"hello this is logly\", color=logly.COLOR.RED) # with custom color of red\n\n```\n### output\n```\n[XXXX-XX-XX XX:XX: XX] INFo: msg: hello this is logly\n\n```\n\n## Contributing\nContributions are welcome! Before contributing, please read our [Contributing Guidelines](CONTRIBUTING.md) to ensure a smooth and collaborative development process.\n\n## Code of Conduct\n\nPlease review our [Code of Conduct](CODE_OF_CONDUCT.md) to understand the standards of behavior we expect from contributors and users of this project.\n\n## License\nThis project is licensed under the [MIT License](). See [LICENSE](LICENSE) for more details.\n\n## Support the Project\nIf you find this project helpful, please consider supporting it. Your contribution will help maintain and improve the project.\n\nüí∞ You can help me improve more by offering a little support on any platform‚ù§Ô∏è\n\n\n[![Sponsor muhammad-fiaz](https://img.shields.io/badge/Sponsor-%231EAEDB.svg?&style=for-the-badge&logo=GitHub-Sponsors&logoColor=white)](https://github.com/sponsors/muhammad-fiaz)\n\n\n\n\n\n## Happy Coding ‚ù§Ô∏è\n","slug":"logly"},{"frontmatter":{"title":"Portfolio Website | Muhammad Fiaz","description":"Welcome to my portfolio repository! This open-source project, built with Next.js and TypeScript, creates a dynamic and responsive portfolio. Explore the code to perfect your showcase of skills!","date":"2023-04-10T00:00:00.000Z","image":"https://private-user-images.githubusercontent.com/75434191/284063330-44252d99-9dff-4e5f-9bec-819e3fca7fb3.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTA0MzM4NjIsIm5iZiI6MTcxMDQzMzU2MiwicGF0aCI6Ii83NTQzNDE5MS8yODQwNjMzMzAtNDQyNTJkOTktOWRmZi00ZTVmLTliZWMtODE5ZTNmY2E3ZmIzLmpwZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMTQlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzE0VDE2MjYwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIyMGQyMDQ5Y2JkMGQ1NzI5NzVkYjM5NjYyMDQ0ZmM5NzRkYzQ1ZWRjYTQyNzFiM2JmOWJiYmQxZjU1MTJjZDYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.sxJ5Hsz0J_6pp_GNokhvALOQZmEZbk6FuR6qfsTdmYM","categories":["development","web","portfolio","nextjs","typescript","react","opensource","opensource-project","opensource-portfolio","template"],"authors":["muhammad-fiaz"],"tags":["nextjs","typescript","react","portfolio","opensource","opensource-project","opensource-portfolio","template"],"draft":false},"content":"\n\n\n\nThis project is built with Next.js and React, showcasing [Muhammad Fiaz](https://github.com/muhammad-fiaz/)'s [personal website](https://muhammadfiaz.com/).\n\n**Feel free to use this project for your own portfolio or as a reference for your projects. If you find it helpful, don't forget to give it a ‚≠êÔ∏è to show your support. [Fork this repo](https://github.com/muhammad-fiaz/portfolio/fork) if you want to contribute‚ú®**\n\n## Table of Contents\n\n- [Release Notes](#release-notes)\n- [Getting Started](#getting-started)\n- [Available Scripts](#available-scripts)\n  - [`npm run dev`](#npm-run-dev)\n  - [`npm run build`](#npm-run-build)\n  - [`npm run build-webpack`](#npm-run-build-webpack)\n  - [`npm start`](#npm-start)\n  - [`next export`](#next-export)\n  - [`npm run lint`](#npm-run-lint)\n  - [`npm run sitemap`](#npm-run-sitemap)\n  - [`npm run test`](#npm-run-test)\n- [Icons Information](#icons-information)\n- [Vector Graphics Animations](#vector-graphics-animations)\n- [More Information](#more-information)\n- [Support Me](#support-me)\n- [License](#license)\n- [Contributing](#contributing)\n- [Deploy on Vercel](#deploy-on-vercel)\n- [Stay Connected!](#stay-connected)\n\n### Release Notes\n\nFor a detailed list of releases and changes, please visit the [GitHub Releases page](https://github.com/muhammad-fiaz/portfolio/releases).\n\nYou can also refer to the [CHANGELOG.md](./CHANGELOG.md) file for comprehensive information about each release.\n\nif you have any suggestions or feedback, feel free to open an [issue](https://github.com/muhammad-fiaz/portfolio/issues) or a [pull request](https://github.com/muhammad-fiaz/portfolio/pulls).\n\n## Getting Started\n\nTo run the project locally, follow these steps:\n\n1. Clone the repository: `git clone https://github.com/muhammad-fiaz/portfolio.git`\n2. Navigate to the project directory: `cd portfolio`\n3. Install the dependencies: `npm install`\n4. Start the development server: `npm run dev`\n5. Open [http://localhost:3000](http://localhost:3000) in your browser to view the website.\n\n## Available Scripts\n\nIn the project directory, you can run the following scripts:\n\n### `npm run dev`\n\nRuns the app in development mode.\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\\\nThe page will reload if you make edits.\\\nYou will also see any lint errors in the console.\n\n### `npm run build`\n\nBuilds the app for production to the `.next` folder using default Next.js build config.\\\nIt correctly bundles Next.js and optimizes the build for the best performance.\n\nor\n\n\n### `npm run build-webpack`\nBuild the app for production to the `.next` folder using a custom config webpack.\\\nThis is useful if you want to use [webpack plugins](https://nextjs.org/docs/app/api-reference/next-config-js/webpack) to optimize the build.(**Optional**)\n\n### `npm start`\n\nStarts the production server to serve the built app.\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\n\n### `next export`\n\nExports the app to static HTML, which can be run without a Node.js server.\\\nThe exported app will be in the `out` folder.\n\n**Note: if you want to use [export](https://nextjs.org/docs/pages/building-your-application/deploying/static-exports) as static site, then disable the [image optimization](https://nextjs.org/docs/pages/building-your-application/optimizing/images) in [`next.config.mjs`](./next.config.js)**\n\n### `npm run lint`\n\nRuns the [Next.js ESLint](https://nextjs.org/docs/basic-features/eslint) linter.\\\nIt will show lint errors in the console.\n\n### `npm run sitemap`\n\nGenerate a sitemap for the website.\\\nIt will generate a sitemap.xml file in the public directory.\n\n## `npm run test`\n\nRuns the [Jest](https://jestjs.io/) test runner on your tests.\\\nIt will show test results in the console.\n\n\n\n## Icons Information\n\nüíñ Icons are from [Font Awesome](https://fontawesome.com/), [Devicon](https://devicon.dev/),\nand also [Google Fonts](https://fonts.google.com/icons).\n\n##  Vector Graphics Animations\n\n‚ú® Vector Graphics Animations are from [LottieFiles](https://lottiefiles.com/).\n\n## More Information\n\nPlease Read the [Next.js Documentation](https://nextjs.org/docs/getting-started).\nAlso, Read the [React.js Documentation](https://reactjs.org/docs/getting-started.html).\n\n\n## Support Me\n\n<div align=\"center\">\n\n<h5> <strong> üí∞ You can help this improve more by offering a little support‚ù§Ô∏è</strong></h5>\n\n\n[![Sponsor muhammad-fiaz](https://img.shields.io/badge/Sponsor-%231EAEDB.svg?&style=for-the-badge&logo=GitHub-Sponsors&logoColor=white)](https://github.com/sponsors/muhammad-fiaz)\n\n</div>\n\n\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](https://github.com/muhammad-fiaz/portfolio/blob/main/LICENSE.md) file for details.\n\n## Contributing\n\nContributions are welcome!\n\nIf you find any bugs or have suggestions for improvements, please open an issue or submit a pull request.\nAnd make sure to follow the [project guidelines](CODE_OF_CONDUCT.md)\n\n\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\n**This Project Also Supports [Vercel](https://vercel.com/dashboard) and comes with [(Vercel Analytics pre-enabled in it)](https://vercel.com/analytics) you can Host it there if you like it**\n\nCheck out the [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n\n‚úÖ See [latest release](https://github.com/muhammad-fiaz/portfolio/releases/latest) version for production use!\n\n## Stay Connected!\n\nThank you for checking out [my portfolio on GitHub](https://github.com/muhammad-fiaz/portfolio)! We're constantly working to improve and enhance the project. To ensure you're always up-to-date with the latest changes, we recommend following these steps:\n\n1. **Watch This Repository:** Click the ‚≠êÔ∏è \"Watch\" button at the top right of the page to [receive notifications](https://docs.github.com/en/account-and-profile/managing-subscriptions-and-notifications-on-github/watching-and-unwatching-repositories) for any new releases, issues, or discussions.\n\n2. **Star the Repository:** If you find my portfolio useful or interesting, consider giving it a [star](https://github.com/muhammad-fiaz/portfolio/stargazers). This helps us gain visibility and shows your appreciation for the project.\n\n3. **Fork for Contributions:** If you're interested in contributing to my portfolio, feel free to [fork](https://github.com/muhammad-fiaz/portfolio/fork) the repository, make changes, and submit a pull request. We welcome contributions from the community!\n\n4. **Join the Discussion:** Check out the [Discussions](https://github.com/muhammad-fiaz/portfolio/discussions) tab to join conversations, ask questions, and share your ideas with other users and contributors.\n\n5. **Stay Updated:** Periodically visit the repository's [\"Releases\" section](https://github.com/muhammad-fiaz/portfolio/releases) to find detailed information about each new release, including new features, bug fixes, and improvements.\n\nBy following these steps, you'll be sure to stay connected with the latest developments and updates. I appreciate your interest in my portfolio and can't wait to see how it benefits you!\n\nIf you have any questions or feedback, please don't hesitate to reach out.\n\nDon't forget to Stay tuned for updates and new features!\n\n\n  <img   align=\"right\" src=\"https://github.com/muhammad-fiaz/muhammad-fiaz/assets/75434191/ed52c517-611e-4647-9b35-acd001a287b9\" width=\"20%\" />\n\n### Happy Coding! üòä\n","slug":"portfolio"}]